{
  "quiz": {
    "id": 18302,
    "title": "Components and Props Quiz",
    "html_url": "https://learning.flatironschool.com/courses/3264/quizzes/18302",
    "mobile_url": "https://learning.flatironschool.com/courses/3264/quizzes/18302?force_user=1&persist_headless=1",
    "description": "<p><span>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again. </span></p>\n<p><span>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</span></p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 11,
    "points_possible": 11.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_18302"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": null,
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/3264/quizzes/18302/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/3264/quizzes/18302/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/3264/quizzes/18302/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/3264/quizzes/18302/submission_versions",
    "assignment_id": 124631,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 6202,
    "show_correct_answers_last_attempt": true,
    "version_number": 3,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": null,
    "question_types": [
      "multiple_answers_question",
      "multiple_choice_question",
      "fill_in_multiple_blanks_question",
      "true_false_question",
      "short_answer_question"
    ]
  },
  "questions": [
    {
      "quiz_id": 18302,
      "id": 123916,
      "quiz_group_id": null,
      "assessment_question_id": 128060,
      "position": null,
      "question_name": "I want to render the Card component inside of my Container component. How would I properly export the Card component?",
      "question_type": "multiple_answers_question",
      "question_text": "<p>I want to render the Card component inside of my Container component. How would I properly export the Card component?</p>\n<p>&nbsp;</p>\n<pre>function Card({ title, subtitle }) {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;{title}&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;{subtitle}&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}</pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "1734",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<pre>function Card({ title, subtitle }) { ... }<br><br>export default Card;</pre>"
        },
        {
          "id": "8523",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<pre>export default function Card({ title, subtitle }) { ... }</pre>"
        },
        {
          "id": "8013",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure you are exporting the correct function!</p>",
          "weight": 0.0,
          "html": "<pre>function Card({ title, subtitle }) { ... }<br>export cardComponent;</pre>"
        },
        {
          "id": "6044",
          "text": "I don't know.",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123917,
      "quiz_group_id": null,
      "assessment_question_id": 128061,
      "position": null,
      "question_name": "I want to render the Card component inside of my Container component. How would I properly import the Card component?",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>I want to render the Card component inside of my Container component. How would I properly import the Card component?</span></p>\n<pre>// src/Card.js<br>function Card({ title, subtitle }) {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;{title}&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;{subtitle}&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}<br><br>export default Card</pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 9841,
          "text": "",
          "html": "<pre>import Card from './Card'</pre>",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 8833,
          "text": "",
          "html": "<pre>import { Card } from './Card'</pre>",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        },
        {
          "id": 1559,
          "text": "",
          "html": "<pre>import default Card from './Card'</pre>",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        },
        {
          "id": 7111,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123918,
      "quiz_group_id": null,
      "assessment_question_id": 126349,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Which of the following components are valid?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "3302",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<pre>function Card() {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;React&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;Component&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}</pre>"
        },
        {
          "id": "4790",
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "html": "<pre>function Card({ title, subtitle }) {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;{title}&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;{subtitle}&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}</pre>"
        },
        {
          "id": "2924",
          "text": "",
          "comments": "",
          "comments_html": "<p>This isn't a valid component, since all React components must start with a capital letter. Since <strong>card&nbsp;</strong>is lowercase, it's not a valid component, because React would treat this as a DOM element rather than a function component when rendered:</p>\n<p>&nbsp;</p>\n<pre>ReactDOM.render(&lt;card /&gt;, document.querySelector(\"#root\"))<br><br>// &lt;div id=\"root\"&gt;<br>//   &lt;card /&gt;<br>// &lt;/div&gt;<br><br><br></pre>",
          "weight": 0.0,
          "html": "<pre>function card() {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;React&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;Component&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}</pre>"
        },
        {
          "id": "6682",
          "text": "",
          "comments": "",
          "comments_html": "<p>This is not a valid component because it doesn't return JSX. Functions defined with the <strong>function</strong> keyword must explicitly return using the <strong>return</strong> keyword.</p>",
          "weight": 0.0,
          "html": "<pre>function Card() {<br>  (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;React&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;Component&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}</pre>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123919,
      "quiz_group_id": null,
      "assessment_question_id": 126350,
      "position": null,
      "question_name": "Question",
      "question_type": "fill_in_multiple_blanks_question",
      "question_text": "<p>A React component is a function that takes in [blank1] and returns [blank2].</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "3200",
          "text": "props",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "blank_id": "blank1"
        },
        {
          "id": "7974",
          "text": "JSX",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "blank_id": "blank2"
        },
        {
          "id": 4335,
          "text": "jsx",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "blank_id": "blank2"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123920,
      "quiz_group_id": null,
      "assessment_question_id": 126351,
      "position": null,
      "question_name": "Question",
      "question_type": "true_false_question",
      "question_text": "<p>A React function component must start with a capital letter.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "comments": "",
          "comments_html": "",
          "text": "True",
          "weight": 100,
          "id": 6103
        },
        {
          "comments": "",
          "comments_html": "<p>React differentiates between a component and a regular DOM element based on capitalization. For example, making an article component with a lowercase name wouldn't work:</p>\n<pre>function article() {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;React&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;Component&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}<br><br>ReactDOM.render(&lt;article /&gt;, document.getElementById(\"root\"))</pre>\n<p><br>Trying to render this component would result in React rendering an <a class=\"inline_disabled\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article\" target=\"_blank\">&lt;article&gt; HTML element</a> instead of the article component,</p>\n<p>Using an uppercase name for the function fixes this problem:</p>\n<pre>function Article() {<br>&nbsp; return (<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &lt;h1&gt;React&lt;/h1&gt;<br>&nbsp; &nbsp; &nbsp; &lt;p&gt;Component&lt;/p&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; );<br>}<br><br>ReactDOM.render(&lt;Article /&gt;, document.getElementById(\"root\"))</pre>",
          "text": "False",
          "weight": 0,
          "id": 6805
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123921,
      "quiz_group_id": null,
      "assessment_question_id": 126352,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Given the following code, what would appear in the console?&nbsp;</p>\n<p>&nbsp;</p>\n<pre>function Parent() {<br>&nbsp; const header = \"Hello\"<br>&nbsp; const contents = \"World\"<br>&nbsp;&nbsp;<br>&nbsp; return &lt;Child title={header} body={contents} minutesToRead={10} /&gt;<br>}<br><br>function Child(props) {<br>&nbsp; console.log(props);<br>&nbsp; // ... return JSX<br>}</pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 78,
          "text": "",
          "html": "<pre>{<br>&nbsp; title: \"Hello\",<br>  body: \"World\",<br>&nbsp; minutesToRead: 10<br>}</pre>",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 2640,
          "text": "",
          "html": "<pre>{<br>&nbsp; header: \"Hello\",<br>&nbsp; contents: \"World\",<br>&nbsp; minutesToRead: 10<br>}</pre>",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123922,
      "quiz_group_id": null,
      "assessment_question_id": 128063,
      "position": null,
      "question_name": "We use ___ to pass data into a component.",
      "question_type": "short_answer_question",
      "question_text": "<div>\n<div><span>We use ___ to pass data into a component.</span></div>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "2002",
          "text": "props",
          "comments": "",
          "comments_html": "",
          "weight": 100
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123923,
      "quiz_group_id": null,
      "assessment_question_id": 128034,
      "position": null,
      "question_name": "What is a React component?",
      "question_type": "multiple_answers_question",
      "question_text": "<div>\n<div><span>What is a React component?</span></div>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 5839,
          "text": "A function that takes in props and returns JSX",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 8753,
          "text": "An independent and reusable bit of code.",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 8349,
          "text": "An HTML file.",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        },
        {
          "id": 7781,
          "text": "I don't know.",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123924,
      "quiz_group_id": null,
      "assessment_question_id": 128065,
      "position": null,
      "question_name": "When should I use the key prop?",
      "question_type": "multiple_choice_question",
      "question_text": "<div>\n<div><span>When should I use the </span><code><span>key</span></code><span>&nbsp;prop?</span></div>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 7770,
          "text": "When rendering a list of components.",
          "html": "",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": 986,
          "text": "If two components are the exact same.",
          "html": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        },
        {
          "id": 9187,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123925,
      "quiz_group_id": null,
      "assessment_question_id": 128059,
      "position": null,
      "question_name": "Which of the following are true of JSX?",
      "question_type": "multiple_answers_question",
      "question_text": "<div>\n<div><span>Which of the following are true of JSX?</span></div>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "214",
          "text": "JSX stands for JavaScript XML.",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": "8187",
          "text": "JSX makes it easier to manipulate the DOM in React.",
          "comments": "",
          "comments_html": "",
          "weight": 100.0
        },
        {
          "id": "2561",
          "text": "JSX and HTML are interchangeable.",
          "comments": "",
          "comments_html": "<p>While they may look similar, there are a few key differences between HTML and JSX:</p>\n<ul>\n<li>Certain element attributes are different in JSX and HTML (class vs className)</li>\n<li>JSX must be transpiled into valid JavaScript, which React then uses to create DOM elements</li>\n</ul>",
          "weight": 0.0
        },
        {
          "id": "5611",
          "text": "",
          "comments": "",
          "comments_html": "<p>On its own, JSX isn't valid JavaScript and is not part of the language.&nbsp;JSX must be transpiled into valid JavaScript using a tool like Babel.</p>",
          "weight": 0.0,
          "html": "<p>JSX is a valid form of JavaScript syntax.</p>"
        },
        {
          "id": "1993",
          "text": "I don't know.",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 18302,
      "id": 123926,
      "quiz_group_id": null,
      "assessment_question_id": 128035,
      "position": null,
      "question_name": "Would the following code create a valid component?",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Would the following code create a valid component?</p>\n<pre><code>\nfunction App() {\n  return (\n    &lt;Article /&gt;\n    &lt;Comment /&gt;\n  );\n}\n</code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "4730",
          "text": "No",
          "comments": "",
          "comments_html": "<p>Correct! A component can only return one element.</p>",
          "weight": 100.0
        },
        {
          "id": "9806",
          "text": "Yes",
          "comments": "",
          "comments_html": "<p>A component can only return one element. We'd need to wrap the returned components in an enclosing tag to make this valid:</p>\n<pre><code>function App() {\n  return (<br>    &lt;div&gt;\n      &lt;Article /&gt;\n      &lt;Comment /&gt;<br>    &lt;/div&gt;\n  );\n}</code></pre>\n<p>&nbsp;</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}